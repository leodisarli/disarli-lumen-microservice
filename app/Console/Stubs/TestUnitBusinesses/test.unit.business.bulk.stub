<?php

namespace App\Domains\{{domainCaps}}\Businesses;

use App\Domains\{{domainCaps}}\Repositories\{{domainCaps}}BulkRepository;
use Mockery;
use PHPUnit\Framework\TestCase;

class {{domainCaps}}BulkBusinessTest extends TestCase
{
    /**
     * @covers \App\Domains\{{domainCaps}}\Businesses\{{domainCaps}}BulkBusiness::__construct
     */
    public function testCreateBusiness()
    {
        ${{domain}}BulkRepositorySpy = Mockery::spy({{domainCaps}}BulkRepository::class);

        ${{domain}}BulkBusiness = new {{domainCaps}}BulkBusiness(${{domain}}BulkRepositorySpy);

        $this->assertInstanceOf({{domainCaps}}BulkBusiness::class, ${{domain}}BulkBusiness);
    }

    /**
     * @covers \App\Domains\{{domainCaps}}\Businesses\{{domainCaps}}BulkBusiness::process
     */
    public function testProcess()
    {
        ${{domain}}BulkRepositoryMock = Mockery::mock({{domainCaps}}BulkRepository::class)
            ->shouldReceive('getBulk')
            ->with(
                [
                    '5493268a-8960-4d04-96a0-50e0ae46f9a8',
                    'bd996452-efb6-430c-b053-d4b5eabdc9d5',
                    '66180b8d-f342-48c6-adf4-33d27a2f54b1',
                    'e5d85b6e-355f-4d3a-bcd3-324ae3651fc5',
                ],
                ['field'],
                'field',
                'asc',
                ['fields' => 'field']
            )
            ->andReturn([])
            ->getMock();

        ${{domain}}BulkBusiness = new {{domainCaps}}BulkBusiness(${{domain}}BulkRepositoryMock);
        $business = ${{domain}}BulkBusiness->process(
            [
                '5493268a-8960-4d04-96a0-50e0ae46f9a8',
                'bd996452-efb6-430c-b053-d4b5eabdc9d5',
                '66180b8d-f342-48c6-adf4-33d27a2f54b1',
                'e5d85b6e-355f-4d3a-bcd3-324ae3651fc5',
            ],
            ['field'],
            'field',
            'asc',
            ['fields' => 'field']
        );

        $this->assertEquals([], $business);
    }

    public function tearDown()
    {
        Mockery::close();
    }
}
